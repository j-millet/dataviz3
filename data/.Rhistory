shiny::runApp('Desktop/dataviz3/app')
runApp('Desktop/dataviz3/app')
data <- read.csv("./covid-data.csv")
setwd("~/Desktop/dataviz3/data")
data <- read.csv("./covid-data.csv")
View(data)
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
cases_aggr <- data %>% group_by(date) %>% summarise(new_cases_smoothed = sum(new_cases_smoothed))
plot(cases_aggr$date, cases_aggr$new_cases_smoothed, type = "l", xlab = "Date", ylab = "New cases")
cases_aggr <- data %>% na.omit() %>% group_by(date) %>% summarise(new_cases_smoothed = sum(new_cases_smoothed))
plot(cases_aggr$date, cases_aggr$new_cases_smoothed, type = "l", xlab = "Date", ylab = "New cases")
plot(cases_aggr$new_cases_smoothed, type = "l", xlab = "Date", ylab = "New cases")
cases_aggr <- data %>% na.omit() %>% group_by(date) %>% arrange(date) %>% summarise(new_cases_smoothed = sum(new_cases_smoothed))
View(cases_aggr)
cases_aggr
cases_aggr <- data %>% select(date,new_cases_smoothed) %>%replace_na(list(new_cases_smoothed=0)) %>% group_by(date) %>% arrange(date) %>% summarise(new_cases_smoothed = sum(new_cases_smoothed))
plot(cases_aggr$new_cases_smoothed, type = "l", xlab = "Date", ylab = "New cases")
plot(cases_aggr$date,cases_aggr$new_cases_smoothed, type = "l", xlab = "Date", ylab = "New cases")
plot(cases_aggr$new_cases_smoothed, type = "l", xlab = "Date", ylab = "New cases")
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
axis(side = 1, at = x, labels = FALSE, tck = -0.01)
plot(cases_aggr$new_cases_smoothed, type = "l", xlab = "Date", ylab = "New cases",xaxt = "n")
plot(cases_aggr$new_cases_smoothed, type = "l", xlab = "Date", ylab = "New cases",xaxt = "n",yaxt = "n")
plot(cases_aggr$new_cases_smoothed, type = "l", xlab = "", ylab = "New cases",xaxt = "n",yaxt = "n")
ggplot(data=cases_aggr, aes(x=date, y=new_cases_smoothed)) +
geom_line()
library(ggplot2)
t
ggplot(data=cases_aggr, aes(x=date, y=new_cases_smoothed)) +
geom_line()
ggplot(data=cases_aggr, aes(x=date, y=new_cases_smoothed, group=1)) +
geom_line()
ggplot(data=cases_aggr, aes(x=date, y=new_cases_smoothed, group=1)) +
geom_line() + theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
View(cases_aggr)
geopoly <- read_sf("./countries.geojson")
View(geopoly)
runApp('~/Desktop/dataviz3/app')
geopoly <- read_sf("./custom.geo.json")
View(geopoly)
View(data)
iso = data %>% select(iso_code) %>% unique()
View(iso)
dayData <- data %>% filter(date == as.Date("2020-06-11","%Y-%m-%d")) %>% select(iso_code, total_cases)
dayData <- iso %>% left_join(dayData, by = c("iso_code" = "iso_code")) %>% replace_na(list(total_cases = 0))
joined_geo <- geopoly %>% left_join(dayData, by = c("sov_a3" = "iso_code")) %>% replace_na(list(total_cases = 0))
View(joined_geo)
View(geopoly)
leaflet() %>%
#addTiles() %>%
setView(lng = 0, lat = 50, zoom = 2) %>%
addPolygons(
data = joined_geo,
color = "white",
fillColor=pal(joined_geo$total_cases),
stroke = 0,
opacity = 0.8,
fillOpacity=1,
label = ~paste0(sovereignt, ": New cases per 100k: ", total_cases))
leaflet() %>%
#addTiles() %>%
setView(lng = 0, lat = 50, zoom = 2) %>%
addPolygons(
data = joined_geo,
color = "white",
fillColor="black",
stroke = 0,
opacity = 0.8,
fillOpacity=1,
label = ~paste0(sovereignt, ": New cases per 100k: ", total_cases))
View(dayData)
geopoly <- read_sf("./custom.geo.json")
iso = data %>% select(iso_code) %>% unique()
dayData <- data %>% filter(date == as.Date("2020-06-11","%Y-%m-%d")) %>% select(iso_code, total_cases)
dayData <- iso %>% left_join(dayData, by = c("iso_code" = "iso_code")) %>% replace_na(list(total_cases = 0))
joined_geo <- geopoly %>% left_join(dayData, by = c("sov_a3" = "iso_code")) %>% replace_na(list(total_cases = 0))
leaflet() %>%
#addTiles() %>%
setView(lng = 0, lat = 50, zoom = 2) %>%
addPolygons(
data = joined_geo,
color = "white",
fillColor="black",
stroke = 0,
opacity = 0.8,
fillOpacity=1,
label = ~paste0(sovereignt, ": New cases per 100k: ", total_cases))
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
View(joined_geo)
geopoly <- read_sf("./countries.geojson")
iso = data %>% select(iso_code) %>% unique()
dayData <- data %>% filter(date == as.Date("2020-06-11","%Y-%m-%d")) %>% select(iso_code, total_cases)
dayData <- iso %>% left_join(dayData, by = c("iso_code" = "iso_code")) %>% replace_na(list(total_cases = 0))
joined_geo <- geopoly %>% left_join(dayData, by = c("sov_a3" = "iso_code")) %>% replace_na(list(total_cases = 0))
View(joined_geo)
geopoly <- read_sf("./countries.geojson")
iso = data %>% select(iso_code) %>% unique()
dayData <- data %>% filter(date == as.Date("2020-06-11","%Y-%m-%d")) %>% select(iso_code, total_cases)
dayData <- iso %>% left_join(dayData, by = c("iso_code" = "iso_code")) %>% replace_na(list(total_cases = 0))
joined_geo <- geopoly %>% left_join(dayData, by = c("ISO_A3" = "iso_code")) %>% replace_na(list(total_cases = 0))
View(joined_geo)
dayData <- data %>% filter(date == as.Date(dates$date[1],"%Y-%m-%d")) %>% select(iso_code, total_cases)
dayData <- iso %>% left_join(dayData, by = c("iso_code" = "iso_code")) %>% replace_na(list(total_cases = 0))
joined_geo <- geopoly %>% left_join(dayData, by = c("ISO_A3" = "iso_code")) %>% replace_na(list(total_cases = 0))
dates <- data %>% select(date) %>% unique()
iso = data %>% select(iso_code) %>% unique()
dayData <- data %>% filter(date == as.Date(dates$date[1],"%Y-%m-%d")) %>% select(iso_code, total_cases)
dayData <- iso %>% left_join(dayData, by = c("iso_code" = "iso_code")) %>% replace_na(list(total_cases = 0))
joined_geo <- geopoly %>% left_join(dayData, by = c("ISO_A3" = "iso_code")) %>% replace_na(list(total_cases = 0))
View(joined_geo)
dates <- data %>% select(date) %>% unique() %>% arrange(date) %>%pull(date) %>% as.Date("%Y-%m-%d")
geopoly <- read_sf("./countries.geojson")
iso = data %>% select(iso_code) %>% unique()
dayData <- data %>% filter(date == dates$date[1],"%Y-%m-%d") %>% select(iso_code, total_cases)
dayData <- data %>% filter(date == dates[1],"%Y-%m-%d") %>% select(iso_code, total_cases)
joined_geo <- geopoly %>% left_join(dayData, by = c("ISO_A3" = "iso_code")) %>% replace_na(list(total_cases = 0))
leaflet() %>%
#addTiles() %>%
setView(lng = 0, lat = 50, zoom = 2) %>%
addPolygons(
data = joined_geo,
color = "white",
fillColor="black",
stroke = 0,
opacity = 0.8,
fillOpacity=1,
label = ~paste0(sovereignt, ": New cases per 100k: ", total_cases))
View(joined_geo)
View(dayData)
dayData <- dayData %>%
mutate(new_cases_smoothed_per_capita = new_cases_smoothed/population)
dayData <- data %>% filter(date == dates[1],"%Y-%m-%d") %>% select(iso_code, new_cases_smoothed)
dayData <- data %>% filter(date == dates[1]) %>% select(iso_code, new_cases_smoothed)
dayData <- iso %>% left_join(dayData, by = c("iso_code" = "iso_code")) %>% replace_na(list(total_cases = 0))
View(dayData)
dayData <- iso %>% left_join(dayData, by = c("iso_code" = "iso_code")) %>% replace_na(list(new_cases_smoothed = 0))
View(dayData)
dayData <- dayData %>%
mutate(new_cases_smoothed_per_capita = new_cases_smoothed/population)
dayData <- data %>% filter(date == dates[1]) %>% select(location,iso_code, new_cases_smoothed,population)
dayData <- iso %>% left_join(dayData, by = c("iso_code" = "iso_code")) %>% replace_na(list(new_cases_smoothed = 0))
dayData <- dayData %>%
mutate(new_cases_smoothed_per_capita = new_cases_smoothed/population)
View(data)
View(dayData)
joined_geo <- geopoly %>% left_join(dayData, by = c("ISO_A3" = "iso_code")) %>% replace_na(list(new_cases_smoothed = 0))
dayData <- data %>%
filter(date == input$date) %>%
select(location,iso_code, new_cases_smoothed,population)
dayData <- iso %>%
left_join(dayData, by = c("iso_code" = "iso_code")) %>%
replace_na(list(new_cases_smoothed = 0))
dayData <- dayData %>%
mutate(new_cases_smoothed_per_capita = new_cases_smoothed/population)
View(dayData)
runApp('~/Desktop/dataviz3/app')
dayData <- iso %>%
left_join(dayData, by = c("iso_code" = "iso_code")) %>%
replace_na(list(new_cases_smoothed = 0,population=1))
dayData <- dayData %>%
mutate(new_cases_smoothed_per_capita = new_cases_smoothed/population)
dayData <- data %>%
filter(date == input$date) %>%
select(location,iso_code, new_cases_smoothed,population)
dayData <- iso %>%
left_join(dayData, by = c("iso_code" = "iso_code")) %>%
replace_na(list(new_cases_smoothed = 0,population=1))
dayData <- dayData %>%
mutate(new_cases_smoothed_per_capita = new_cases_smoothed/population)
joined_geo <- geopoly %>% left_join(dayData, by = c("ISO_A3" = "iso_code")) %>% replace_na(list(new_cases_smoothed = 0))
leaflet() %>%
#addTiles() %>%
setView(lng = 0, lat = 50, zoom = 2) %>%
addPolygons(
data = joined_geo,
color = "white",
fillColor="black",
stroke = 0,
opacity = 0.8,
fillOpacity=1,
label = ~paste0(sovereignt, ": New cases per 100k: ", total_cases))
View(joined_geo)
joined_geo <- geopoly %>% left_join(dayData, by = c("ISO_A3" = "iso_code")) %>% replace_na(list(new_cases_smoothed_per_capita = 0))
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
install.packages("paletteer")
runApp('~/Desktop/dataviz3/app')
runApp('~/Desktop/dataviz3/app')
?`paletter''
'
???
??????//''
??????//'''
'sda'
sdas
d
as
d
a
s
d
a
s
d
a
s
d
as
d
as
d
runApp('~/Desktop/dataviz3/app')
